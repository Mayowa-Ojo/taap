{"id":"node_modules/console-browserify/test/static/test-adapter.js","dependencies":[{"name":"/Users/sam/Documents/workspace/hippocampus3/package.json","includedInParent":true,"mtime":1571538472835},{"name":"/Users/sam/Documents/workspace/hippocampus3/.babelrc","includedInParent":true,"mtime":1571498568000},{"name":"/Users/sam/Documents/workspace/hippocampus3/node_modules/console-browserify/package.json","includedInParent":true,"mtime":1570844856560}],"generated":{"js":"(function () {\n    var Testem = window.Testem\n    var regex = /^((?:not )?ok) (\\d+) (.+)$/\n\n    Testem.useCustomAdapter(tapAdapter)\n\n    function tapAdapter(socket){\n        var results = {\n            failed: 0\n            , passed: 0\n            , total: 0\n            , tests: []\n        }\n\n        socket.emit('tests-start')\n\n        Testem.handleConsoleMessage = function(msg){\n            var m = msg.match(regex)\n            if (m) {\n                var passed = m[1] === 'ok'\n                var test = {\n                    passed: passed ? 1 : 0,\n                    failed: passed ? 0 : 1,\n                    total: 1,\n                    id: m[2],\n                    name: m[3],\n                    items: []\n                }\n\n                if (passed) {\n                    results.passed++\n                } else {\n                    console.error(\"failure\", m)\n\n                    results.failed++\n                }\n\n                results.total++\n\n                // console.log(\"emitted test\", test)\n                socket.emit('test-result', test)\n                results.tests.push(test)\n            } else if (msg === '# ok' || msg.match(/^# tests \\d+/)){\n                // console.log(\"emitted all test\")\n                socket.emit('all-test-results', results)\n            }\n\n            // return false if you want to prevent the console message from\n            // going to the console\n            // return false\n        }\n    }\n}())\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/console-browserify/test/static/test-adapter.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/console-browserify/test/static/test-adapter.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/console-browserify/test/static/test-adapter.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/console-browserify/test/static/test-adapter.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/console-browserify/test/static/test-adapter.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/console-browserify/test/static/test-adapter.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/console-browserify/test/static/test-adapter.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/console-browserify/test/static/test-adapter.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/console-browserify/test/static/test-adapter.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/console-browserify/test/static/test-adapter.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/console-browserify/test/static/test-adapter.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/console-browserify/test/static/test-adapter.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/console-browserify/test/static/test-adapter.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/console-browserify/test/static/test-adapter.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/console-browserify/test/static/test-adapter.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/console-browserify/test/static/test-adapter.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/console-browserify/test/static/test-adapter.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/console-browserify/test/static/test-adapter.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/console-browserify/test/static/test-adapter.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/console-browserify/test/static/test-adapter.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/console-browserify/test/static/test-adapter.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/console-browserify/test/static/test-adapter.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/console-browserify/test/static/test-adapter.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/console-browserify/test/static/test-adapter.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/console-browserify/test/static/test-adapter.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/console-browserify/test/static/test-adapter.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/console-browserify/test/static/test-adapter.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/console-browserify/test/static/test-adapter.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/console-browserify/test/static/test-adapter.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/console-browserify/test/static/test-adapter.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/console-browserify/test/static/test-adapter.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/console-browserify/test/static/test-adapter.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/console-browserify/test/static/test-adapter.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/console-browserify/test/static/test-adapter.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/console-browserify/test/static/test-adapter.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/console-browserify/test/static/test-adapter.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/console-browserify/test/static/test-adapter.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/console-browserify/test/static/test-adapter.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/console-browserify/test/static/test-adapter.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/console-browserify/test/static/test-adapter.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/console-browserify/test/static/test-adapter.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/console-browserify/test/static/test-adapter.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/console-browserify/test/static/test-adapter.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/console-browserify/test/static/test-adapter.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/console-browserify/test/static/test-adapter.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/console-browserify/test/static/test-adapter.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/console-browserify/test/static/test-adapter.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/console-browserify/test/static/test-adapter.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/console-browserify/test/static/test-adapter.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/console-browserify/test/static/test-adapter.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/console-browserify/test/static/test-adapter.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/console-browserify/test/static/test-adapter.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/console-browserify/test/static/test-adapter.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/console-browserify/test/static/test-adapter.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}}],"sources":{"node_modules/console-browserify/test/static/test-adapter.js":"(function () {\n    var Testem = window.Testem\n    var regex = /^((?:not )?ok) (\\d+) (.+)$/\n\n    Testem.useCustomAdapter(tapAdapter)\n\n    function tapAdapter(socket){\n        var results = {\n            failed: 0\n            , passed: 0\n            , total: 0\n            , tests: []\n        }\n\n        socket.emit('tests-start')\n\n        Testem.handleConsoleMessage = function(msg){\n            var m = msg.match(regex)\n            if (m) {\n                var passed = m[1] === 'ok'\n                var test = {\n                    passed: passed ? 1 : 0,\n                    failed: passed ? 0 : 1,\n                    total: 1,\n                    id: m[2],\n                    name: m[3],\n                    items: []\n                }\n\n                if (passed) {\n                    results.passed++\n                } else {\n                    console.error(\"failure\", m)\n\n                    results.failed++\n                }\n\n                results.total++\n\n                // console.log(\"emitted test\", test)\n                socket.emit('test-result', test)\n                results.tests.push(test)\n            } else if (msg === '# ok' || msg.match(/^# tests \\d+/)){\n                // console.log(\"emitted all test\")\n                socket.emit('all-test-results', results)\n            }\n\n            // return false if you want to prevent the console message from\n            // going to the console\n            // return false\n        }\n    }\n}())\n"},"lineCount":54}},"error":null,"hash":"588f5ba5224247321f695a47733776fb","cacheData":{"env":{}}}